openapi: 3.0.1
info:
  title: Social Platform API
  description: API documentation for the Social Platform project
  version: 1.0.0

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
              required:
                - email
                - password
                - username
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid input

  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Login successful
        "401":
          description: Invalid credentials

  /posts:
    get:
      summary: Get all posts
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"

    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostInput"
      responses:
        "201":
          description: Post created successfully
        "400":
          description: Invalid input

  /posts/{postId}:
    get:
      summary: Get a post by ID
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "404":
          description: Post not found

    put:
      summary: Update a post
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostInput"
      responses:
        "200":
          description: Post updated successfully
        "400":
          description: Invalid input
        "404":
          description: Post not found

    delete:
      summary: Delete a post
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Post deleted successfully
        "404":
          description: Post not found

  /posts/{postId}/hide:
    post:
      summary: Hide a post
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Post hidden successfully
        "404":
          description: Post not found

  /posts/{postId}/comments:
    get:
      summary: Get comments for a post
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"

    post:
      summary: Create a comment on a post
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentInput"
      responses:
        "201":
          description: Comment created successfully
        "400":
          description: Invalid input
        "404":
          description: Post not found

  /posts/{postId}/comments/{commentId}:
    put:
      summary: Update a comment
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentInput"
      responses:
        "200":
          description: Comment updated successfully
        "400":
          description: Invalid input
        "404":
          description: Comment not found

    delete:
      summary: Delete a comment
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Comment deleted successfully
        "404":
          description: Comment not found

  /posts/{postId}/reactions:
    get:
      summary: Get reactions for a post
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reaction"

    post:
      summary: Create a reaction on a post
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReactionInput"
      responses:
        "201":
          description: Reaction created successfully
        "400":
          description: Invalid input
        "404":
          description: Post not found

  /posts/{postId}/reactions/{reactionId}:
    put:
      summary: Update a reaction
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
        - name: reactionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReactionInput"
      responses:
        "200":
          description: Reaction updated successfully
        "400":
          description: Invalid input
        "404":
          description: Reaction not found

    delete:
      summary: Delete a reaction
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
        - name: reactionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Reaction deleted successfully
        "404":
          description: Reaction not found

components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: integer
        email:
          type: string
        username:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Profile:
      type: object
      properties:
        profile_id:
          type: integer
        user_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        bio:
          type: string
        profile_picture:
          type: string
        privacy_settings:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Post:
      type: object
      properties:
        post_id:
          type: integer
        user_id:
          type: integer
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        is_hidden:
          type: boolean

    PostInput:
      type: object
      properties:
        content:
          type: string
        is_hidden:
          type: boolean

    Comment:
      type: object
      properties:
        comment_id:
          type: integer
        post_id:
          type: integer
        user_id:
          type: integer
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CommentInput:
      type: object
      properties:
        content:
          type: string

    Reaction:
      type: object
      properties:
        reaction_id:
          type: integer
        user_id:
          type: integer
        post_id:
          type: integer
        reaction_type:
          type: string
        created_at:
          type: string
          format: date-time

    ReactionInput:
      type: object
      properties:
        reaction_type:
          type: string
